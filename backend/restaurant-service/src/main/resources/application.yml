server:
  port: 9090

spring:
  application:
    name: restaurant-service
  
  datasource:
    url: jdbc:postgresql://localhost:5432/quisin_restaurant_db
    username: postgres
    password: quisinpass
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://auth-service:8081
          jwk-set-uri: http://auth-service:8081/.well-known/jwks.json

  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
          configuration:
            security.protocol: PLAINTEXT
      bindings:
        restaurantEvents-out-0:
          destination: restaurant-events
          content-type: application/json
        chainEvents-out-0:
          destination: chain-events
          content-type: application/json

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: restaurant-service
    distribution:
      percentiles-histogram:
        http.server.requests: true
      slo:
        http.server.requests: 50ms, 100ms, 200ms
    enable:
      jvm: true
      process: true
      system: true
      logback: true
      tomcat: true

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 0
    validate-on-migrate: true
    clean-disabled: true
    placeholders:
      schema: public
    schemas: public

  cache:
    type: caffeine
    cache-names: restaurants,chains,locations
    caffeine:
      spec: maximumSize=500,expireAfterWrite=5m

---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://localhost:5432/quisin_restaurant_db
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/quisin_restaurant_db
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka:29092

# Logging Configuration
logging:
  level:
    root: INFO
    com.quisin.restaurant: DEBUG
    org.springframework.web: INFO

# Swagger/OpenAPI Configuration
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  api-docs:
    path: /v3/api-docs
    enabled: true

# Feign Client Configuration
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic

# Service URLs Configuration
quisin:
  services:
    auth-service:
      url: auth-service:8081
    user-service:
      url: user-service:8082
    notification-service:
      url: notification-service:8084
    menu-service:
      url: menu-service:8085

  restaurant:
    default-timezone: UTC
    max-chains-per-admin: 5
    reservation-buffer-hours: 2

  features:
    enable-chain-management: true
    enable-reservations: false
    enable-delivery: false
    enable-analytics: false
    enable-real-time-updates: false
  
  rate-limit:
    enabled: true
    limit: 100
    duration: 60
    
  cache:
    ttl:
      restaurants: 300  # 5 minutes
      chains: 600      # 10 minutes
      locations: 900   # 15 minutes
